// <auto-generated />
using System;
using BaloncestoAPI.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BaloncestoAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Estadistica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AciertosTotales")
                        .HasColumnType("int");

                    b.Property<int>("FallosTotales")
                        .HasColumnType("int");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.Property<int>("MejorPuntuacion")
                        .HasColumnType("int");

                    b.Property<int>("TotalPartidas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JugadorId")
                        .IsUnique();

                    b.ToTable("Estadisticas");
                });

            modelBuilder.Entity("Jugador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ContraseñaHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("IX_Jugadores_Email");

                    b.ToTable("Jugadores");
                });

            modelBuilder.Entity("Partida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("JugadorId")
                        .HasColumnType("int");

                    b.Property<int>("PuntosTotales")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JugadorId", "Fecha")
                        .HasDatabaseName("IX_Partidas_JugadorFecha");

                    b.ToTable("Partidas");
                });

            modelBuilder.Entity("Tiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Acierto")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("Distancia")
                        .HasPrecision(10, 2)
                        .HasColumnType("float");

                    b.Property<int>("PartidaId")
                        .HasColumnType("int");

                    b.Property<float>("TiempoSegundos")
                        .HasPrecision(10, 2)
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PartidaId");

                    b.ToTable("Tiros");
                });

            modelBuilder.Entity("Estadistica", b =>
                {
                    b.HasOne("Jugador", "Jugador")
                        .WithOne("Estadistica")
                        .HasForeignKey("Estadistica", "JugadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jugador");
                });

            modelBuilder.Entity("Partida", b =>
                {
                    b.HasOne("Jugador", "Jugador")
                        .WithMany("Partidas")
                        .HasForeignKey("JugadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jugador");
                });

            modelBuilder.Entity("Tiro", b =>
                {
                    b.HasOne("Partida", "Partida")
                        .WithMany("Tiros")
                        .HasForeignKey("PartidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partida");
                });

            modelBuilder.Entity("Jugador", b =>
                {
                    b.Navigation("Estadistica");

                    b.Navigation("Partidas");
                });

            modelBuilder.Entity("Partida", b =>
                {
                    b.Navigation("Tiros");
                });
#pragma warning restore 612, 618
        }
    }
}
